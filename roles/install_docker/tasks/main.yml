---
- name: install curl
  package:
    name: curl
    state: latest

- name: install docker machine
  become: true
  shell: 'curl -L "https://github.com/docker/machine/releases/download/v0.10.0/docker-machine-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-machine && 
  chmod +x /usr/local/bin/docker-machine'



- name: install docker compose
  become: true
  shell: 'curl -L "https://github.com/docker/compose/releases/download/1.11.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&
  chmod +x /usr/local/bin/docker-compose'

- name: Uninstall old versions docker et docker engine
  become: true
  apt: 
    state=absent
    name={{item}}
  with_items: 
  - docker
  - docker-engine

- name: install paquet pour docker engine
  become: true
  apt: 
    update_cache=yes
    state=latest
    name={{item}} 
  with_items: 
  - apt-transport-https
  - ca-certificates  
  - curl
  - software-properties-common

- name:  ajout clef docker engine
  become: true
  shell: 'curl -fsSL "https://download.docker.com/linux/debian/gpg" | sudo apt-key add -'

- name: ajout du depot_1_13 docker engine
  become: true
  shell: 'add-apt-repository  "deb https://packages.docker.com/1.13/apt/repo/ debian-$(lsb_release -cs)  main"'

- name: update package
  become: true
  shell: 'apt-get -y update'

- name: install docker engine
  become: true
  package:
     name: docker-engine
     state: present

#Autorisation user pour Docker (+handlers)

- name: Ajout user en cours
  become: true
  shell: "groupadd docker; gpasswd -a $USER docker"
  notify:
      - restart docker

- name: Change  Autorisation sur /var/run/docker.sock
  become: true
  file:
      path: /var/run/docker.sock
      owner: thai_q 
#      owner: vietti
      group: docker

#Mise en place du docker swarm
- name: Creation d'un group de manager
  shell: 'docker swarm init --advertise-addr={{ swarm_iface | default("eth0") }}:2377'
  when: 
      - "'swarm_manager_operational' not in groups"
      - ansible_host == '172.16.230.18'
  register: bootstrap_first_node

- name: add initialized host to swarm_manager_operational group
  add_host:
      hostname: "{{ play_hosts[0] }}"
      groups: swarm_manager_operational
  when:
      - bootstrap_first_node | changed
      - ansible_host == '172.16.230.18' 

- name: retrieve swarm worker token
  shell: 'docker swarm join-token -q worker'
  register: swarm_worker_token
  when: ansible_host == '172.16.230.18'

- name: populate list of manager ips
  add_host:
       hostname: "{{ hostvars[item]['ansible_' + iface]['ipv4']['address'] }}"
       groups: swarm_manager_ips
  with_items: "{{ play_hosts }}"
  when: ansible_host == '172.16.230.18'

- name: join worker nodes to cluster
  shell: "docker swarm join --advertise-addr={{ swarm_iface | default('eth0') }}:2377 --token={{ token }} {{ groups['swarm_manager_ips'][0] }}:2377"
  when: ansible_host == "172.16.230.51" or
        ansible_host == "172.16.230.84"

- name: docker network config
  shell: 'docker network create -d overlay --subnet 10.1.9.0/24 multi-host-net'
  when: ansible_host == '172.16.230.18'
